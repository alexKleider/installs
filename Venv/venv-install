# File: venv-install

https://medium.com/the-andela-way/configuring-python-environment-with-virtualenvwrapper-8745c2895745

### REDACTED !!  in favour of 'virtualenvwrapper' 

cd ~
mkdir .virtualenvs
pip install virtualenv
which virtualenv
pip install virtualenvwrapper

vim .bash_profile
# Press shift+I to add the next two lines to your .bash_profile
export WORKON_HOME=~/.virtualenvs
source /home/alex/.local/bin/virtualenvwrapper.sh

mkvirtualenv myenv

If you created your project folder already, you could cd into the
folder before running the mkvirtualenv command with some arguments
to automatically navigate to the project folder whenever you activate
the virtual environment. Here is the format:
mkvirtualenv [-a project_path] [-i package] [-r requirements_file] [virtualenv options] [ENVNAME]

mkvirtualenv -a $(pwd) createdenv

or

mkvirtualenv -a $(pwd) python=python3 createdenv

If you created your python environment first and made some module
installations before creating your project folder and files e.g Django
projects, no worries, you are not excluded in the goodies that come with
automatically navigating to your project folder when you activate your
virtualenv; Just run this command in the format-
setvirtualenvproject [~/.virtualenvs/your-virtual-env/] [~/path/to/your/project]
setvirtualenvproject ~/.virtualenvs/your-venv/ ~/path/to/project/rootdirectory

Use the deactivate command to deactivate a virtual environment.
Use the workon createdenv command to subsequently activate a virtual
environment or just run workon to list all available virtual
environments created. You can navigate to other created virtual
environments while on a given environment without necessarily
deactivating it first.

workon createdenv
workon

You could use the rmvirtualenv ENVNAME to remove an installed virtual
environment. Note that you must deactivate the virtual environment to
be able to delete or remove it.

rmvirtualenv createdenv

There is this sweet command to copy an entire virtual environment to a
newly created virtual environment. If you havenâ€™t felt the need to do
this, you certainly would someday. A typical scenario is when you need
to observe the effect of meddling with specific modules in your current
environment while preserving its original form. Here is the command to
copy your virtualenv: cpvirtualenv [ENVNAME] [TARGETENVNAME]

cpvirtualenv createdenv copiedenv

##########################################
sudo apt install python3-pip build-essential python3-dev python3-setuptools python3-wheel
pip3 install virtualenv  # successful but which virtualenv => nothing
sudo apt install virtualenv
pip3 install virtualenvwrapper  # ditto
sudo apt install virtualenvwrapper  # ditto ???
# add the following to .profile:
# export WORKON_HOME=~/.virtualenvs
# source /usr/local/bin/virtualenvwrapper.sh
sudo apt install python3-venv
###########################################
# https://linoxide.com/linux-how-to/setup-python-virtual-environment-ubuntu/
sudo apt-get install build-essential libssl-dev libffi-dev python-dev
sudo apt-get install -y python3-pip
sudo apt-get install build-essential libssl-dev libffi-dev python-dev
sudo apt-get install -y python3-venv
mkdir ~/.environments
cd ~/.environments
python3 -m venv project_env
source project_env/bin/activate
# work under "project_env" environment
deactivate
pip3 install virtualenvwrapper
# virtualenvwrapper.sh found in two places:
##  /home/alex/.local/bin/virtualenvwrapper.sh
##  /usr/share/virtualenvwrapper/virtualenvwrapper.sh
# Need to add the following line to shell start up script- in my case
# .profile calls .custom.sh which contains the following:
## source ~/.local/bin/virtualenvwrapper.sh
#######################################################################

# HOW TO copy project file systems?
#   git commit and push to github
#   Then use rsync as follows:
#   rsync -av --exclude '[.].+' alex@sourceIP:<source> <destination>

# Problems burning cds solved with:
# wodim -eject -tao  speed=2 dev=/dev/sr0 -v -data ~/Downloads/firmware-9.6.0-amd64-netinst.iso

===================================================================

# https://realpython.com/vim-and-python-a-match-made-in-heaven/#vim-extensions
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim

